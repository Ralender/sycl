; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -del-asc -S < %s | FileCheck %s

define weak_odr dso_local spir_kernel void @test1(i32 addrspace(1)* nocapture readonly %0) {
; CHECK-LABEL: @test1(
; CHECK-NEXT:    [[TMP2:%.*]] = getelementptr inbounds i32, i32 addrspace(1)* [[TMP0:%.*]], i64 2
; CHECK-NEXT:    [[TMP3:%.*]] = bitcast i32 addrspace(1)* [[TMP2]] to float addrspace(1)*
; CHECK-NEXT:    [[TMP4:%.*]] = load float, float addrspace(1)* [[TMP3]], align 4
; CHECK-NEXT:    [[TMP5:%.*]] = fptosi float [[TMP4]] to i32
; CHECK-NEXT:    ret void
;
  %ASC = addrspacecast i32 addrspace(1)* %0 to i32*
  %2 = getelementptr inbounds i32, i32 * %ASC, i64 2
  %3 = bitcast i32 * %2 to float *
  %4 = load float, float* %3, align 4
  %5 = fptosi float %4 to i32
  ret void
}

define dso_local nonnull i32* @test2a(i32* readnone %0) {
  %2 = getelementptr inbounds i32, i32* %0, i64 2
  ret i32* %2
}

define weak_odr dso_local spir_kernel void @test2(i32 addrspace(1)* %0) {
; CHECK-LABEL: @test2(
; CHECK-NEXT:    [[TMP2:%.*]] = tail call i32 addrspace(1)* @test2a.2.3(i32 addrspace(1)* [[TMP0:%.*]])
; CHECK-NEXT:    store i32 1, i32 addrspace(1)* [[TMP2]], align 4
; CHECK-NEXT:    ret void
;
  %2 = addrspacecast i32 addrspace(1)* %0 to i32*
  %3 = tail call i32* @test2a(i32* %2)
  store i32 1, i32* %3, align 4
  ret void
}

define dso_local nonnull i32 addrspace(1)* @_Z4castPi(i32* readnone %0) {
  %2 = getelementptr inbounds i32, i32* %0, i64 2
  %3 = addrspacecast i32* %2 to i32 addrspace(1)*
  ret i32 addrspace(1)* %3
}

define weak_odr dso_local spir_kernel void @_Z5test2Pi(i32* %0) {
; CHECK-LABEL: @_Z5test2Pi(
; CHECK-NEXT:    [[TMP2:%.*]] = tail call i32* @_Z4castPi.1(i32* [[TMP0:%.*]])
; CHECK-NEXT:    store i32 1, i32* [[TMP2]], align 4
; CHECK-NEXT:    ret void
;
  %2 = tail call i32 addrspace(1)* @_Z4castPi(i32* %0)
  store i32 1, i32 addrspace(1)* %2, align 4
  ret void
}
